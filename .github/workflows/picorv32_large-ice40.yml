on:
  push:
    paths:
    - yosys.sha
    - icestorm.sha
    - nextpnr.sha
    - picorv32.v
    - synth_area_top.v
    - .github/workflows/picorv32_large-ice40.yml

env:
  yosys-args: "-top top_large"
  yosys-input: "picorv32.v synth_area_top.v"
  nextpnr-args: "--hx8k --freq 70"

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      seed: ${{ steps.seed.outputs.seed }}
    steps:
    - id: seed
      run: python -c "print('::set-output name=seed::[%s]' % ','.join(map(str,range(0,100))))"

  yosys:
    needs: build-yosys
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        echo "::set-env name=YOSYS_SHA::$(cat yosys.sha)"
    - uses: actions/cache@v1
      id: cache-yosys
      with:
        path: /opt/yosys
        key: yosys-${{ env.YOSYS_SHA }}-${{ runner.os }}
    - run: |
        echo "::add-path::/opt/yosys/bin"
    - run: yosys -p 'synth_ice40 -json synth.json ${{ env.yosys-args }}' ${{ env.yosys-input }} |& tee yosys.log
    - uses: actions/upload-artifact@v2
      with:
        name: synth
        path: synth.json
    - uses: actions/upload-artifact@v2
      with:
        path: yosys.log

  nextpnr:
    needs: [setup-matrix, build-nextpnr-ice40, yosys]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        seed: ${{ fromJson(needs.setup-matrix.outputs.seed) }}
    steps:
    - uses: actions/checkout@v2
    - run: |
        echo "::set-env name=NEXTPNR_SHA::$(cat nextpnr.sha)"
    - uses: actions/cache@v1
      id: cache-nextpnr
      with:
        path: /opt/nextpnr-ice40
        key: nextpnr-${{ env.NEXTPNR_SHA }}-${{ runner.os }}
    - run: |
        echo "::add-path::/opt/nextpnr-ice40/bin"
    - uses: actions/download-artifact@v2
      with:
        name: synth
    - run: nextpnr-ice40 --json synth.json --seed ${{ matrix.seed }} ${{ env.nextpnr-args }} |& tee nextpnr-${{ matrix.seed }}.log
    - run: "sed -nr 's/.* Max frequency .*: ([0-9.]+).*/\\1/p' nextpnr-${{ matrix.seed }}.log | tail -n1 | tee nextpnr-${{ matrix.seed }}.fmax"
    - uses: actions/upload-artifact@v2
      with:
        name: fmax
        path: '*.fmax'
    - uses: actions/upload-artifact@v2
      with:
        path: '*.log'

  summary:
    needs: [setup-matrix, nextpnr]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: fmax
    - run: |
        import sys, glob
        v = []
        for i in glob.glob('*.fmax'):
          try:
            v.append(float(open(i).readline()))
          except ValueError:
            pass
        with open('summary.txt', 'w') as f:
          print >>f, 'Min: %.2f MHz; Avg: %.2f MHz; Max %.2f MHz; over %d seeds' % (min(v), sum(v)/len(v), max(v), len(v))
      shell: python
    - run: echo "::warning ::$(cat summary.txt)"
    - uses: actions/upload-artifact@v2
      with:
        name: summary
        path: summary.txt

  build-yosys:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: YosysHQ/yosys
        path: yosys
    - run: echo "::set-env name=YOSYS_SHA::$(cat yosys.sha)"
    - uses: actions/cache@v1
      id: cache-yosys
      with:
        path: /opt/yosys
        key: yosys-${{ env.YOSYS_SHA }}-${{ runner.os }}
    - if: steps.cache-yosys.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install build-essential clang bison flex libreadline-dev gawk tcl-dev libffi-dev git graphviz xdot pkg-config python3 libboost-system-dev libboost-python-dev libboost-filesystem-dev zlib1g-dev
        make -j3
        sudo make install -j3 PREFIX=$PREFIX
      env:
        PREFIX: /opt/yosys
      working-directory: yosys

  build-icestorm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: cliffordwolf/icestorm
        path: icestorm
    - run: echo "::set-env name=ICESTORM_SHA::$(cat icestorm.sha)"
    - uses: actions/cache@v1
      id: cache-icestorm
      with:
        path: /opt/icestorm
        key: icestorm-${{ env.ICESTORM_SHA }}-${{ runner.os }}

#    - run: |
#        sudo apt-get install ccache
#        echo "::add-path::/usr/lib/ccache"
#    - uses: actions/cache@v1
#      with:
#        path: ~/.ccache_icestorm
#        key: ccache_icestorm-${{ runner.os }}

    - if: steps.cache-icestorm.outputs.cache-hit != 'true'
      run: |
        make -j3 ICEPROG=$ICEPROG
        sudo make install -j3 ICEPROG=$ICEPROG PREFIX=$PREFIX
      env:
        ICEPROG: 0
        PREFIX: /opt/icestorm
      working-directory: icestorm

  build-nextpnr-ice40:
    runs-on: ubuntu-latest
    needs: build-icestorm
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: YosysHQ/nextpnr
        path: nextpnr
    - run: |
        echo "::set-env name=ICESTORM_SHA::$(cat icestorm.sha)"
        echo "::set-env name=NEXTPNR_SHA::$(cat nextpnr.sha)"
    - uses: actions/cache@v1
      id: cache-icestorm
      with:
        path: /opt/icestorm
        key: icestorm-${{ env.ICESTORM_SHA }}-${{ runner.os }}
    - uses: actions/cache@v1
      id: cache-nextpnr
      with:
        path: /opt/nextpnr-ice40
        key: nextpnr-${{ env.NEXTPNR_SHA }}-${{ runner.os }}
    - if: steps.cache-nextpnr.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install libboost-dev libboost-filesystem-dev libboost-thread-dev libboost-program-options-dev libboost-python-dev libboost-iostreams-dev libboost-dev libeigen3-dev
        cmake -DARCH=ice40 -DBUILD_GUI=OFF -DBUILD_PYTHON=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX -DICEBOX_ROOT=$ICEBOX_ROOT
        make -j3
        sudo make install -j3
      env:
        PREFIX: /opt/nextpnr-ice40
        ICEBOX_ROOT: /opt/icestorm/share/icebox
      working-directory: nextpnr

